
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  lineUserId: 'lineUserId',
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TechnicianScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  specialization: 'specialization',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  productCode: 'productCode',
  name: 'name',
  model: 'model',
  description: 'description',
  customerId: 'customerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RepairRequestScalarFieldEnum = {
  id: 'id',
  requestNo: 'requestNo',
  problemDescription: 'problemDescription',
  requestDate: 'requestDate',
  status: 'status',
  customerId: 'customerId',
  productId: 'productId'
};

exports.Prisma.RepairJobScalarFieldEnum = {
  id: 'id',
  jobNo: 'jobNo',
  assignedDate: 'assignedDate',
  jobStatus: 'jobStatus',
  totalCost: 'totalCost',
  approvalStatus: 'approvalStatus',
  approvalDate: 'approvalDate',
  approvedBy: 'approvedBy',
  completedDate: 'completedDate',
  repairRequestId: 'repairRequestId',
  technicianId: 'technicianId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RepairJobItemScalarFieldEnum = {
  id: 'id',
  itemType: 'itemType',
  description: 'description',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  remarks: 'remarks',
  repairJobId: 'repairJobId'
};

exports.Prisma.RepairApprovalScalarFieldEnum = {
  id: 'id',
  approverName: 'approverName',
  approvalDate: 'approvalDate',
  approvalStatus: 'approvalStatus',
  comments: 'comments',
  repairJobId: 'repairJobId'
};

exports.Prisma.RepairLogScalarFieldEnum = {
  id: 'id',
  action: 'action',
  logDate: 'logDate',
  statusAfter: 'statusAfter',
  notes: 'notes',
  repairJobId: 'repairJobId',
  technicianId: 'technicianId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.RepairRequestStatus = exports.$Enums.RepairRequestStatus = {
  PENDING: 'PENDING',
  RECEIVED: 'RECEIVED',
  UNDER_REVIEW: 'UNDER_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED',
  JOB_CREATED: 'JOB_CREATED'
};

exports.JobStatus = exports.$Enums.JobStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING_PARTS: 'WAITING_PARTS',
  APPROVED: 'APPROVED',
  COMPLETED: 'COMPLETED',
  RETURNED: 'RETURNED',
  CANCELLED: 'CANCELLED'
};

exports.RepairStatus = exports.$Enums.RepairStatus = {
  PENDING: 'PENDING',
  ASSIGNED: 'ASSIGNED',
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING_PARTS: 'WAITING_PARTS',
  REPAIRED: 'REPAIRED',
  RETURNED: 'RETURNED',
  CANCELLED: 'CANCELLED'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  WAITING: 'WAITING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.JobItemType = exports.$Enums.JobItemType = {
  PART: 'PART',
  LABOR: 'LABOR',
  SERVICE: 'SERVICE',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  Customer: 'Customer',
  Technician: 'Technician',
  Product: 'Product',
  RepairRequest: 'RepairRequest',
  RepairJob: 'RepairJob',
  RepairJobItem: 'RepairJobItem',
  RepairApproval: 'RepairApproval',
  RepairLog: 'RepairLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/firstsecond/Repositories/Bun/haddy/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/firstsecond/Repositories/Bun/haddy/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// learn more about it in the docs: https://pris.ly/d/prisma-schema\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Customer {\n  id         Int     @id @default(autoincrement())\n  lineUserId String  @unique\n  name       String\n  email      String  @unique\n  phone      String?\n  address    String?\n\n  // Relation fields\n  products       Product[]\n  repairRequests RepairRequest[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Technician {\n  id             Int     @id @default(autoincrement())\n  name           String\n  email          String? @unique\n  phone          String?\n  specialization String?\n\n  // Relation fields\n  repairJobs RepairJob[]\n  repairLogs RepairLog[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now())\n}\n\nmodel Product {\n  id          Int     @id @default(autoincrement())\n  productCode String  @unique\n  name        String\n  model       String\n  description String?\n\n  // Relation fields\n  customer   Customer @relation(fields: [customerId], references: [id])\n  customerId Int\n\n  repairRequests RepairRequest[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel RepairRequest {\n  id                 Int                 @id @default(autoincrement())\n  requestNo          String              @unique\n  problemDescription String\n  requestDate        DateTime            @default(now())\n  status             RepairRequestStatus @default(PENDING)\n\n  // Relation fields\n  customer   Customer @relation(fields: [customerId], references: [id])\n  customerId Int\n  product    Product  @relation(fields: [productId], references: [id])\n  productId  Int\n\n  // Relation fields\n  repairJob RepairJob?\n}\n\nmodel RepairJob {\n  id             Int            @id @default(autoincrement())\n  jobNo          String         @unique\n  assignedDate   DateTime?      @default(now())\n  jobStatus      JobStatus      @default(PENDING)\n  totalCost      Decimal        @default(0.00) @db.Decimal(10, 2)\n  approvalStatus ApprovalStatus @default(WAITING)\n  approvalDate   DateTime?\n  approvedBy     String?\n  completedDate  DateTime?\n\n  // Relation fields\n  repairRequest   RepairRequest @relation(fields: [repairRequestId], references: [id])\n  repairRequestId Int           @unique\n  technician      Technician    @relation(fields: [technicianId], references: [id])\n  technicianId    Int\n\n  repairJobItems  RepairJobItem[]\n  repairApprovals RepairApproval[]\n  repairLogs      RepairLog[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel RepairJobItem {\n  id          Int         @id @default(autoincrement())\n  itemType    JobItemType\n  description String\n  quantity    Int         @default(1)\n  unitPrice   Decimal     @db.Decimal(10, 2)\n  totalPrice  Decimal     @db.Decimal(10, 2)\n  remarks     String?\n\n  // Relation fields\n  repairJob   RepairJob @relation(fields: [repairJobId], references: [id])\n  repairJobId Int\n}\n\nmodel RepairApproval {\n  id             Int            @id @default(autoincrement())\n  approverName   String\n  approvalDate   DateTime       @default(now())\n  approvalStatus ApprovalStatus @default(WAITING)\n  comments       String?\n\n  // Relation fields\n  repairJob   RepairJob @relation(fields: [repairJobId], references: [id])\n  repairJobId Int\n}\n\nmodel RepairLog {\n  id          Int       @id @default(autoincrement())\n  action      String\n  logDate     DateTime  @default(now())\n  statusAfter JobStatus\n  notes       String?\n\n  // Relation fields\n  repairJob    RepairJob  @relation(fields: [repairJobId], references: [id])\n  repairJobId  Int\n  technician   Technician @relation(fields: [technicianId], references: [id])\n  technicianId Int\n\n  createdAt DateTime @default(now())\n}\n\n// สถานะของใบแจ้งซ่อม (RepairRequest)\n// ใช้ในการติดตาม workflow ก่อนออกใบงานซ่อม\nenum RepairRequestStatus {\n  PENDING // ใบแจ้งซ่อมถูกสร้างโดยลูกค้า ยังไม่มีเจ้าหน้าที่รับเรื่อง\n  RECEIVED // เจ้าหน้าที่รับเรื่องแล้ว\n  UNDER_REVIEW // กำลังตรวจสอบข้อมูล/อาการเบื้องต้น\n  APPROVED // อนุมัติให้สร้างใบงานซ่อม (สามารถสร้าง RepairJob ได้)\n  REJECTED // ปฏิเสธคำขอซ่อม (เช่น หมดประกันหรือไม่อยู่ในเงื่อนไข)\n  CANCELLED // ลูกค้ายกเลิกคำขอเอง\n  JOB_CREATED // สร้างใบงานซ่อมจริงแล้ว (เชื่อม RepairJob)\n}\n\n// สถานะของใบงานซ่อม (RepairJob) สำหรับติดตาม workflow ระหว่างซ่อม\nenum JobStatus {\n  PENDING // ใบงานซ่อมถูกสร้าง ยังไม่ได้เริ่มดำเนินการ\n  IN_PROGRESS // งานกำลังดำเนินการโดยช่าง\n  WAITING_PARTS // รออะไหล่ / รออนุมัติค่าใช้จ่าย\n  APPROVED // งานได้รับอนุมัติ (อาจจากผู้จัดการ/บัญชี)\n  COMPLETED // งานซ่อมเสร็จเรียบร้อยแล้ว\n  RETURNED // ส่งสินค้าคืนลูกค้าแล้ว\n  CANCELLED // งานถูกยกเลิก\n}\n\n// สถานะรวมสำหรับงานซ่อม (RepairStatus) \n// ใช้เพื่อมองภาพรวม workflow ทั้งใบแจ้งซ่อม + ใบงานซ่อม\nenum RepairStatus {\n  PENDING // ยังไม่มีการกำหนดช่างหรือเริ่มงาน\n  ASSIGNED // งานถูกมอบหมายให้ช่าง\n  IN_PROGRESS // งานกำลังดำเนินการ\n  WAITING_PARTS // รออะไหล่ / รออนุมัติ\n  REPAIRED // งานซ่อมเสร็จเรียบร้อย แต่ยังไม่ส่งคืน\n  RETURNED // ส่งสินค้าคืนลูกค้าแล้ว\n  CANCELLED // งานถูกยกเลิก\n}\n\n// สถานะการอนุมัติ (RepairApproval)\n// ใช้กำหนดขั้นตอนการอนุมัติใบงานซ่อม\nenum ApprovalStatus {\n  WAITING // รออนุมัติ\n  APPROVED // อนุมัติเรียบร้อย\n  REJECTED // ไม่อนุมัติ\n}\n\n// ประเภทของรายการในใบงานซ่อม (RepairJobItem)\n// เพื่อแยกประเภทค่าใช้จ่ายหรือรายการซ่อม\nenum JobItemType {\n  PART // อะไหล่ / ชิ้นส่วน\n  LABOR // ค่าแรงช่าง\n  SERVICE // บริการอื่น ๆ (เช่น ทำความสะอาด, config)\n  OTHER // รายการอื่นที่ไม่เข้าประเภทข้างต้น\n}\n",
  "inlineSchemaHash": "faf6ad46ffcef4d9b9f62800de5e4ac2366aea86b528f62d170bf04b332a1138",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lineUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CustomerToProduct\"},{\"name\":\"repairRequests\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"CustomerToRepairRequest\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Technician\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repairJobs\",\"kind\":\"object\",\"type\":\"RepairJob\",\"relationName\":\"RepairJobToTechnician\"},{\"name\":\"repairLogs\",\"kind\":\"object\",\"type\":\"RepairLog\",\"relationName\":\"RepairLogToTechnician\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToProduct\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairRequests\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"ProductToRepairRequest\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RepairRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"problemDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RepairRequestStatus\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToRepairRequest\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToRepairRequest\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairJob\",\"kind\":\"object\",\"type\":\"RepairJob\",\"relationName\":\"RepairJobToRepairRequest\"}],\"dbName\":null},\"RepairJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jobNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobStatus\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"approvalStatus\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"approvalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"repairRequest\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"RepairJobToRepairRequest\"},{\"name\":\"repairRequestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"technician\",\"kind\":\"object\",\"type\":\"Technician\",\"relationName\":\"RepairJobToTechnician\"},{\"name\":\"technicianId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairJobItems\",\"kind\":\"object\",\"type\":\"RepairJobItem\",\"relationName\":\"RepairJobToRepairJobItem\"},{\"name\":\"repairApprovals\",\"kind\":\"object\",\"type\":\"RepairApproval\",\"relationName\":\"RepairApprovalToRepairJob\"},{\"name\":\"repairLogs\",\"kind\":\"object\",\"type\":\"RepairLog\",\"relationName\":\"RepairJobToRepairLog\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RepairJobItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"itemType\",\"kind\":\"enum\",\"type\":\"JobItemType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"remarks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repairJob\",\"kind\":\"object\",\"type\":\"RepairJob\",\"relationName\":\"RepairJobToRepairJobItem\"},{\"name\":\"repairJobId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"RepairApproval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approverName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvalStatus\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repairJob\",\"kind\":\"object\",\"type\":\"RepairJob\",\"relationName\":\"RepairApprovalToRepairJob\"},{\"name\":\"repairJobId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"RepairLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"statusAfter\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repairJob\",\"kind\":\"object\",\"type\":\"RepairJob\",\"relationName\":\"RepairJobToRepairLog\"},{\"name\":\"repairJobId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"technician\",\"kind\":\"object\",\"type\":\"Technician\",\"relationName\":\"RepairLogToTechnician\"},{\"name\":\"technicianId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

